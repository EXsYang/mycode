package com.atguigu.review;

public class RectangleTest {
	public static void main(String args[]) {
	
		/*回型数1
		1 2 3
		8 9 4
		7 6 5*/
		
		/*回型数2
		1  2  3  4
		12 13 14 5
		11 16 15 6
		10 9  8  7*/
		
		int i = 2;//i行
		int j ;//j列
		
		
		
		int a , b; 
		int c, d = 6;
		//int cd = cc = 2;
		int ac,acc = 3;
		int aa = 4,dd;
		
		char x = 2, v = 6;
		double zz = 3,xx = 6;
		System.out.println("aaaaaaaa");
		byte ddd;
		int sss = 1200;
		ddd = (byte)sss; 
		System.out.println(ddd);
		
		
		
		
		
		
		
		
		
		
		
		/*思路：定义四个变量，分别控制向右打印r，向下打印d，向左打印l，向上打印u
		 * 重点：找出四种打印方式，各自的开始打印和结束打印的条件！！
		 * 1 单独打印，后面条件一致，都满足掐头到最后打印方式
		 * 找规律，什么时候满足各自的打印条件，打印完第一行之后，统一打印条件，掐头到最后，打印时机四次循环一次
		 * 向右打印r：右下对角线的位置，为向右打印开始的坐标，向右打印的次数，为i/2;
		 * 向右打印结束的坐标，左下对角线的位置，为向右打印结束的坐标，向右打印的次数，为i/2;
		 * 这是一个闭区间，
		 * 第二次从13(1+1行，1+1列)开始，直到14(1+1行，1+2列)结束；
		 * 从向上打印结束开始向右打印，撞墙了停止(即下一位有数)
		 * 
		 * 向左打印l：第一次向下打印个数等于i，开始向左打印，直到撞墙停止；第二次，向下打印个数等于i，开始向左打印，直到撞墙停止
		 * 向上打印u：向下打印个数等于i，开始向左打印，直到撞墙停止
		 * 向下打印d：向下打印个数等于i，开始向左打印，直到撞墙停止
		第一行向右打印到i
		第i列向下打印
		其余行向右打印到i-1列*/
		
		//从第二行开始，最后一个数满足第一行最后一个数依次加一的规律，从左向右打印直到i-1列符合
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}

}
