# 先加载bootstrap.yml 再加载application.yml

# `bootstrap.yml` 文件通常翻译成中文，可以称之为 "引导配置文件" 或 "启动配置文件"。
# 这个文件主要用于 Spring Boot 应用程序或 Spring Cloud 微服务框架中
# ，用于加载应用程序启动时的配置信息，比如服务注册中心的地址、配置中心的信息等。
# 它通常与 `application.yml` 或 `application.properties` 文件一起使用
# ，但是 `bootstrap.yml` 的配置在应用程序上下文的早期就被加载，主要用于
# 系统级的配置和引导程序所需的配置。
server:
  port: 5000

spring:
  application:
    # 这里的name需要参考nacos配置中心的 Data ID 不能乱写
    name: e-commerce-nacos-config-client
  #配置nacos
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848 #服务注册中心地址
      config:
        #将来配置中心 和服务注册中心可能不是在一台主机上,因此依然需要指定配置中心的地址
        server-addr: localhost:8848 #配置中心地址
        file-extension: yaml # 指定在nacos-config配置中心，配置文件的扩展名。yaml格式的配置
                             # 这里必须写yaml,而不能写yml
        #group: seckill #指定order/seckill组，默认是DEFAULT_GROUP

#        group: seckill #指定seckill组，默认是DEFAULT_GROUP
#        namespace: 6c62f205-1346-4f5b-a6fc-3c3f86f4d86a #指定阿里公司命名空间ID,默认不指定该属性,使用的就是public命名空间
        group: search #指定search组，默认是DEFAULT_GROUP
        namespace: 221269c4-9bf2-4e77-8447-ad7fadaa418d #指定百度公司命名空间ID
#老师解读
#nacos 配置客户端，会根据配置，找到资源获取配置文件
#1. nacos 配置客户端/当前的微服务模块, 会根据配置，找到配置中心的数据(配置文件)
#2. config.server-addr: localhost:8848 可以找到配置中心
#3. spring.application.name 对应是DataId e-commerce-nacos-config
#4. 在application.yml: 配置 spring.profiles.active dev
#5. spring.cloud.nacos.config.file-extension 配置文件的扩展名 .yaml
#6. 小结: 根据配置 就是 到 localhost:8848 下的 e-commerce-nacos-config-dev.yaml
#   获取配置信息/数据
#7. 规则就是: ${spring.application.name}-${spring.profiles.active}.${spring.cloud.nacos.config.file-extension}
#   来定位配置中心的 Data ID

